#include "platform_setup.h"

#if GLOBAL_OPTIMIZATION == ARM7

#ifdef I2C_MODUL

#ifndef I2C_DEBUG
	
	#undef DEBUG_SHOW_TIME_LINE
	#undef DEBUG_MSG			
	#undef DEBUG_PROC_START
	#undef DEBUG_PROC_END
	#define DEBUG_SHOW_TIME_LINE
	#define DEBUG_MSG			
	#define DEBUG_PROC_START(msg)
	#define DEBUG_PROC_END(msg)
        #define DEBUG_INPUT_PARAM(msg,val)	
        #define DEBUG_OUTPUT_PARAM(msg,val)	
	
#endif


//Описание переменных модуля
uword i2c_hw_addr;
uword i2c_hw_block_size;
unsigned short i2c_hw_size;

const struct exec_queue_rec i2c_init_table[]={{(upointer)i2c_init,I2C_INIT1_PRI|LAST_REC}};
const struct module_rec i2c_struct={(upointer)i2c_init_table, NULL, NULL};

//Описание процедур модуля

void i2c_init(void)                                                                       //Процедура инициализации I2C на PIC18
{
  DEBUG_PROC_START("rtl8305_init");
  i2c_hw_addr = I2C_HW_ADDR_DEF;
  i2c_hw_block_size = I2C_HW_BLOCK_SIZE_DEF;
  i2c_hw_size = I2C_HW_SIZE_DEF;  
  //PINSEL0=0x00550050;
  //PINSEL1=((unsigned int)1<<22)+((unsigned int)1<<24);
  //PINSEL2=0x00000004;
  I20CONCLR=0x6c; /* clearing all flags */
  I20CONSET=0x40; /* enabling I2C */
  #ifdef USE_PLL
    I20SCLH=0xB0; /* 100 KHz */
    I20SCLL=0xB0;
  #else
    I20SCLH=0x40; /* 100 KHz */
    I20SCLL=0x40;
  #endif
  DEBUG_PROC_END("rtl8305_init");
}

void i2c_op_start(unsigned short addr)
{
  DEBUG_PROC_START("i2c_op_start");
  DEBUG_INPUT_PARAM("addr:%x", addr);
  WDT_RESET;
  while(1)
  {
//   I20CONSET_bit.STA=1;
   I20CONSET|=1<<5;
//   while(!I20CONSET_bit.SI);
   while(!(I20CONSET&(1<<3)));
   I20DAT=i2c_hw_addr;           
   I20CONCLR=0x28;
//   while(!I20CONSET_bit.SI); 
   while(!(I20CONSET&(1<<3)));
   if (I20STAT!=0x18) 
   {
  //  I20CONSET_bit.STO=1; 
    I20CONSET|=1<<4;
    I20CONCLR=0x08;
   }
   else {break;}
  }

  if (i2c_hw_size > 2)
  {
   I20DAT=(unsigned char)(addr>>8); 
   I20CONCLR=0x08;
//   while(!I20CONSET_bit.SI);
   while(!(I20CONSET&(1<<3)));
  }
  
  I20DAT=(unsigned char)addr; 
  I20CONCLR=0x08;
 // while(!I20CONSET_bit.SI);
  while(!(I20CONSET&(1<<3)));
  DEBUG_PROC_END("i2c_op_start");
}


void i2c_read(upointer addr, unsigned char *buf, unsigned short len)
{
  DEBUG_PROC_START("i2c_read");
  DEBUG_INPUT_PARAM("addr:%x", addr);
  DEBUG_INPUT_PARAM("*buf:%x", (upointer)buf);
  DEBUG_INPUT_PARAM("len:%u", len);

  
  i2c_op_start(addr);
 // I20CONSET_bit.STA=1; 
   I20CONSET|=1<<5;
  I20CONCLR=0x08;
//  while(!I20CONSET_bit.SI);
  while(!(I20CONSET&(1<<3)));
  I20DAT=i2c_hw_addr|1;           
  I20CONCLR=0x28;
//  while(!I20CONSET_bit.SI); 
  while(!(I20CONSET&(1<<3)));
  do
  {
    if (len==1) I20CONCLR=0x04;
     else I20CONSET|=1<<2;
   // else I20CONSET_bit.AA=1;
    I20CONCLR=0x08;
//    while(!I20CONSET_bit.SI);  
    while(!(I20CONSET&(1<<3)));
    *buf=I20DAT; buf++;
  }while(--len);
  I20CONSET|=1<<4;
//  I20CONSET_bit.STO=1; 
  I20CONCLR=0x08;
  while(I20STAT!=0xF8);
  DEBUG_PROC_END("i2c_read"); 
}

void i2c_write(upointer addr, unsigned char *buf, unsigned short len)
{
  DEBUG_PROC_START("i2c_write");
  DEBUG_INPUT_PARAM("addr:%x", addr);
  DEBUG_INPUT_PARAM("*buf:%x", (upointer)buf);
  DEBUG_INPUT_PARAM("len:%u", len);
  i2c_op_start(addr);
  do
  {
    I20DAT=*buf;
    buf++;
    I20CONCLR=0x08;
//    while(!I20CONSET_bit.SI);
    while(!(I20CONSET&(1<<3)));
    addr++;
    if(!(addr&(i2c_hw_block_size - 1)))
    { 
//      I20CONSET_bit.STO=1; 
      I20CONSET|=1<<4;
      I20CONCLR=0x08;
      i2c_op_start(addr);
    }
  }while(--len);
//  I20CONSET_bit.STO=1; 
  I20CONSET|=1<<4;
  I20CONCLR=0x08;
  while(I20STAT!=0xF8);
  DEBUG_PROC_END("i2c_write");
}

#endif

#endif


