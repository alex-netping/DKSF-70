#define MODULE2  &nic_struct


#define MODULE2_INITS  NIC_INITS
#define MODULE2_EXECS  NIC_EXECS
#define MODULE2_TIMERS NIC_TIMERS
#define NIC_MODUL		//Флажок включения модуля
//#define NIC_DEBUG		//Флажок включения отладки в модуле
///Определения приоритетов INIT/EXEC
#define NIC_INIT1_PRI	20
#define NIC_EXEC1_PRI	0
//---- Переопределение внешних связей модуля----------

///Стартовая страница для динамического создания пакетов
#define NIC_RAM_START 0x40
///Размер динамической области в страницах
#define NIC_RAM_SIZE 21
///Функция чтения буфера из памяти NIC контроллера
#define NIC_READ_BUF(addr,buf,len) /*ax88796_read_buf(addr,buf,len) // */ rtl8019_read_buf(addr,buf,len)
///Функция записи буфера в память NIC контроллера
#define NIC_WRITE_BUF(addr,buf,len) /*ax88796_write_buf(addr,buf,len) // */ rtl8019_write_buf(addr,buf,len)
///функция получения информации о принятом пакете
#define NIC_GET_PACKET /*ax88796_get_packet() // */ rtl8019_get_packet()
///Флаг "пакет принят"
#define NIC_RX_FLAG /*ax88796_parse_struct.rcv_flag // */ rtl8019_parse_struct.rcv_flag
///Переменная которая показывает на какой странице памяти NIC контроллера лежит принятый пакет
#define NIC_RX_ADDR /* ax88796_parse_struct.packet_addr // */ rtl8019_parse_struct.packet_addr
///Процедура обработки принятого пакета (прим. может быть не определена)
#define NIC_PACKET_PARSING ip_parsing()

///Процедура освобождения кольцевого буфера NIC от принятого пакета 
#define NIC_PACKET_REMOVE /* ax88796_remove_packet() // */ rtl8019_remove_packet()
///Процедура отправки пакета 
#define NIC_SEND_PACKET(addr,len)  /* ax88796_send_packet(addr,len) // */ rtl8019_send_packet(addr,len)
///Переменная, где хранится МАС-адрес системы
#define NIC_MAC arp_table[0].mac

//------------- Определение вызовов из зависимых модулей ---------------------

#define _NIC_CREATE_PACKET nic_create_packet()
#define _NIC_SEND_PACKET(packet_id,len,packet_free) nic_send_packet(packet_id,len,packet_free)
#define _NIC_GET_RX_HEAD nic_get_rx_head()
#define _NIC_GET_TX_HEAD(packet_id) nic_get_tx_head(packet_id)
#define _NIC_PUT_TX_HEAD(packet_id) nic_put_tx_head(packet_id)
#define _NIC_GET_RX_BODY(buf,len) nic_get_rx_body(buf,len)
#define _NIC_GET_TX_BODY(packet_id,buf,len) nic_get_tx_body(packet_id,buf,len)
#define _NIC_PUT_TX_BODY(packet_id,buf,len) nic_put_tx_body(packet_id,buf,len)
#define _NIC_SET_RX_BODY_ADDR(addr) nic_set_rx_body_addr(addr)
#define _NIC_SET_TX_BODY_ADDR(addr) nic_set_tx_body_addr(addr)
#define _NIC_RESIZE_PACKET(packet_id,len) nic_resize_packet(packet_id,len)
#define _NIC_FREE_PACKET(packet_id) nic_free_packet(packet_id)


#define NIC_BASE_ERROR_ADDR 0

#define NIC_ERROR1 NIC_BASE_ERROR_ADDR


#include "nic\nic.h"
