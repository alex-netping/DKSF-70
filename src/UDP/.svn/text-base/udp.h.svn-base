//*@{
/**\defgroup UDP
* Модуль UDP предназначен для реализации протокола UDP (см RFC 768)
* модуль позволяет:
* - предварительно разбирать принятый пакет
* - создавать UDP пакет на отправку.
* - отправлять UDP пакет 
*\autor 
*version 1.0
*\date 13.08.2007
*
*
*/
#include "platform_setup.h"
#ifndef UDP_H
#define UDP_H
//@{
/**\name Версия модуля
*
*/
#define UDP_VER     1
#define UDP_BUILD   1
//@}

//------------- Проверка зависимостей
// Если модуль зависим от других модулей проекта, то необходимо произвести проверку наличия в 
// проекте этих модулей и совместимости их версий с версией текущего модуля. 

#ifndef	IP_H
 #error "UDP MODUL: IP modul not defined!!!"
#else
 #if IP_VER!=1
   #error "UDP MODUL: IP modul version not supported!!!"
 #endif
#endif

//------------- Определение вызовов из зависимых модулей ---------------------
//Прим. Все вызовы процедур/переменных/структур из зависимых модулей необходимо производить через 
//объявленные ниже макросы



//Кол-во процедур инициализации
#define UDP_INITS	1
//Кол-во процедур исполняемых в главном цикле
#define UDP_EXECS	0
//Кол-во процедур исполняемых в таймере
#define UDP_TIMERS	0
//Структура описания модуля
extern const struct module_rec udp_struct;


//---------------- Раздел, где будут определяться константы модуля -------------------------
///Значение поля protocol, IP заголовка, для протокола UDP
#define UDP_PROT  0x11
//---------------- Раздел, где будут определяться структуры модуля -------------------------
///Заголовок UDP 
struct udp_header{
  unsigned char src_port[2];  //Порт источника
  unsigned char dest_port[2]; //Порт приемника
  unsigned char len[2];       //Общая длина пакета
  unsigned char CRC[2];       //Контрольная сумма
};
//---------------- Раздел, где будут определяться глобальные переменные модуля -------------
extern struct udp_header udp_rx_head;
extern struct udp_header udp_tx_head;
extern upointer udp_rx_body_pointer,udp_tx_body_pointer;
//---------------- Раздел, где будут определяться функции модуля ---------------------------
/*! Процедура начальной инициализации молудя UDP
* Прим: поместить процедуру в структуру модуля
* Процедура производит след. действия:
* 1. Устанавливает указатели udp_rx_body_pointer,udp_tx_body_pointer в 0
*/
extern void udp_init(void);

/*! Процедура обработки принятого UDP пакета 
* Прим: поместить процедуру в структуру модуля
* Процедура производит след. действия:
* 1. Анализирует заголовок принятого пакета (IP уровень)
* 2. Если принят UDP пакет, загружает его заголовок в структуру udp_rx_head, и 
*    вызывает внешний обработчик UDP_PARSING (см. udp_def.h)
*/
extern void udp_exec(void);

/*! Процедура создает UDP пакет
* Процедура выполняет след. действия:
* 1. Создает IP пакет (_IP_CREATE_PACKET), если пакет не создан (дескриптор равен 0xFF)
*    завершаем работу возвращаем дескриптор 0xFF
* 2. Инициализируем поля заголовока IP в пакете следующим образом:
*    2.1.в поле protocol записываем значение UDP_PROT
* 3. Инициализируем поля заголовока UDP в теле IP пакета следующим образом:
*     3.1. Все поля заполняем нулями
* 4. Возвращаем дескриптор созданного пакета
\return дескриптор пакета
*/
extern uword udp_create_packet(void);


/*! Процедура отправки UDP пакета 
* Процедура выполняет след. действия:
* 1. Вычисляет контрольную сумму UDP пакета ( используя внешнюю функцию UDP_СALC_CRC, правила расчета CRC см в RFC 768 )
* 2. Модифицирует заголовок пакета прописывая туда контрольную сумму  
* 3. Отправляет пакет и освобождает занимаемый им буфер (_IP_SEND_PACKET)
\param packet_id дескриптор пакета
\param len длинна пакета в байтах
*/
extern void udp_send_packet(uword packet_id,unsigned short len);

/*! Процедура копирует заголовок принятого UDP пакета в структуру udp_rx_head
* Процедура выполняет след. действия:
* 1. Устанавливает позицию функцией  _IP_SET_RX_BODY_ADDR  в 0
* 2. Читает заголовок IP пакета при помощи IP_GET_RX_BODY в структуру udp_rx_head
*/
extern void udp_get_rx_header(void);

/*! Процедура копирует заголовок UDP пакета c дескриптором id в структуру udp_tx_head
* Процедура выполняет след. действия:
* 1. Устанавливает позицию функцией  _IP_SET_TX_BODY_ADDR  в 0
* 2. Читает заголовок UDP пакета при помощи IP_GET_TX_BODY в структуру udp_tx_head
\param packet_id дескриптор пакета
*/
extern void udp_get_tx_header(uword packet_id);

/*! Процедура копирует структуру udp_tx_head в заголовок UDP пакета c дескриптором id
* Процедура выполняет след. действия:
* 1. Устанавливает позицию функцией  _IP_SET_TX_BODY_ADDR  в 0
* 2. Копирует структуру udp_tx_head в заголовок UDP пакета при помощи IP_PUT_TX_BODY.
\param packet_id дескриптор пакета
*/
extern void udp_put_tx_header(uword packet_id);

/*! Процедура копирует данные из тела принятого UDP пакета в буфер buf длинной len
* Процедура выполняет след. действия:
* 1. Устанавливает позицию функцией  _IP_SET_TX_BODY_ADDR  в udp_rx_body_pointer+sizeof(struct udp_header)
* 2. Читает буфер длинной len из UDP пакета при помощи IP_GET_RX_BODY 
* 3. Увеличивает udp_rx_body_pointer на длинну len
\param buf указатель на буфер
\param len длинна передаваемых данных в байтах
*/
extern void udp_get_rx_body(unsigned char *buf,uword len);

/*! Процедура копирует данные из тела UDP пакета c дескриптором packet_id в буфер buf длинной len
* Процедура выполняет след. действия:
* 1. Устанавливает позицию функцией  _IP_SET_TX_BODY_ADDR  в udp_tx_body_pointer+sizeof(struct udp_header)
* 2. Читает буфер длинной len из UDP пакета при помощи IP_GET_TX_BODY 
* 3. Увеличивает udp_tx_body_pointer на длинну len
\param packet_id дескриптор пакета
\param buf указатель на буфер
\param len длинна передаваемых данных в байтах
*/
extern void udp_get_tx_body(uword packet_id,unsigned char *buf,uword len);

/*! Процедура копирует буфер buf длинной len в тело UDP пакета c дескриптором packet_id
* Процедура выполняет след. действия:
* 1. Устанавливает позицию функцией  _IP_SET_TX_BODY_ADDR  в udp_tx_body_pointer+sizeof(struct udp_header)
* 2. Пишет буфер длинной len в udp пакет при помощи IP_PUT_TX_BODY 
* 3. Увеличивает udp_tx_body_pointer на длинну len
\param packet_id дескриптор пакета
\param buf указатель на буфер
\param len длинна передаваемых данных в байтах
*/
extern void udp_put_tx_body(uword packet_id,unsigned char *buf,uword len);

#endif
//}@

